steps:
  # To check if the S3 bucket exists and create it if not
  - id: 'check or create S3 bucket'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        gsutil ls -b gs://terraform-sftp-buckect || gsutil mb gs://terraform-sftp-buckect
  #To run terraform init
  - id: 'tf init'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args: 
      - '-c'
      - | 
        set -x  # Enable debug mode
        terraform init 
        set +x  # Disable debug mode
# to run terraform apply
  - id: 'tf apply'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args: 
      - '-c'
      - | 
        terraform apply -auto-approve 
options:
  logging: CLOUD_LOGGING_ONLY

# #--------------------------------------------------------------------------------------
# # # # cloudbuild file to terraform destroy

# #to run terraform init
# steps:
#   - id: 'tf init'
#     name: 'hashicorp/terraform:1.0.0'
#     entrypoint: 'sh'
#     args: 
#       - '-c'
#       - | 
#         terraform init
# # # to pull the state file form the buckect
# #   - id: 'tf state pull'
# #     name: 'google/cloud-sdk:latest'
# #     entrypoint: 'sh'
# #     args: 
# #       - '-c'
# #       - | 
# #         gsutil cp gs://terraform-sftp-buckect/terraform.tfstate .
# to run Terraform destroy
  # - id: 'tf destroy'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: 'sh'
  #   args: 
  #     - '-c'
  #     - | 
  #       terraform destroy -auto-approve 

# options:
#   logging: CLOUD_LOGGING_ONLY
# logs_bucket: "terraform-sftp-buckect/destroy-logs/"